//
//  CourseListViewController.swift
//  CoursesList
//
//  Created by Kairzhan Kural on 9/24/20.
//  Copyright (c) 2020 Kairzhan Kural. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CourseListDisplayLogic: class {
    func displayCourses(viewModel: CourseList.FetchCourses.ViewModel)
}

class CourseListViewController: UITableViewController {
    
    var interactor: CourseListBusinessLogic?
    var router: (NSObjectProtocol & CourseListRoutingLogic & CourseListDataPassing)?
    
    private var courses: [CourseList.FetchCourses.ViewModel.DisplayedCourse] = []
    
    // MARK: View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
        CourseListConfigurator.shared.configure(with: self)
        getCourses()
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: Do something
    private func getCourses() {
        let request = CourseList.FetchCourses.Request()
        interactor?.fetchCourses(request: request)
    }
    
    // MARK: - Table view data source
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        courses.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath) as! CourseTableViewCell
        let course = courses[indexPath.row]
        cell.configure(course: course)
        return cell
    }
    
    // MARK: - Table veiw delegate
    
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return 100
    }
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        return tableView.deselectRow(at: indexPath, animated: true)
    }
}

extension CourseListViewController: CourseListDisplayLogic {
    func displayCourses(viewModel: CourseList.FetchCourses.ViewModel) {
        courses = viewModel.displayedCourses
        DispatchQueue.main.async {
            self.tableView.reloadData()
        }
    }
}
